{"version":3,"sources":["App.js","index.js","logo.svg","github.svg"],"names":["exampleHelloWorldCss","handlebars","registerHelper","obj","SafeString","JSON","stringify","liquid","Liquid","cache","engines","value","label","examples","engine","html","css","data","compile","parseAndRenderSync","render","shouldCompile","title","settings","favicon","description","body","Editor","mode","props","className","theme","name","toUpperCase","height","width","wrapEnabled","setOptions","tabSize","useSoftTabs","Button","children","onClick","useState","loading","setLoading","style","opacity","disabled","a","async","Promise","resolve","size","color","Preview","useDebounce","debouncedHtml","debouncedData","debouncedEngine","err","console","warn","compiledHtml","setCompiledHtml","useEffect","compiled","head","type","debouncedWriteStorage","debounce","writeStorage","maxWait","App","useLocalStorage","storedHtml","storedCss","storedData","storedEngine","setHtml","setCss","setData","dataJson","setDataJson","setEngine","copyTemplate","useCallback","copy","then","toast","info","copyOutput","currentEngine","find","e","currentExamples","filter","example","href","target","rel","src","logo","alt","onChange","val","options","styles","container","base","zIndex","placeholder","parse","length","github","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","pauseOnVisibilityChange","draggable","pauseOnHover","flexGrow","defaultSize","split","primary","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7899cf6a.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { useDebounce } from 'use-debounce'\nimport { Liquid } from 'liquidjs'\n\nimport raw from 'raw.macro'\nimport debounce from 'lodash.debounce'\nimport handlebars from 'handlebars'\nimport copy from 'clipboard-copy'\n\nimport { writeStorage, useLocalStorage } from '@rehooks/local-storage'\nimport AceEditor from 'react-ace'\nimport SplitPane from 'react-split-pane'\nimport Frame from 'react-frame-component'\nimport InnerHTML from 'dangerously-set-html-content'\nimport Select from 'react-select'\nimport ClipLoader from 'react-spinners/ClipLoader'\nimport { ToastContainer, toast } from 'react-toastify'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'ace-builds/src-noconflict/mode-html'\nimport 'ace-builds/src-noconflict/mode-handlebars'\nimport 'ace-builds/src-noconflict/mode-liquid'\nimport 'ace-builds/src-noconflict/mode-css'\nimport 'ace-builds/src-noconflict/mode-json'\nimport 'ace-builds/src-noconflict/theme-monokai'\n\nimport './App.css'\n\nimport logo from './logo.svg'\nimport github from './github.svg'\n\nconst exampleHelloWorldHtml = raw('./examples/hello-world.hbs')\nconst exampleHelloWorldCss = raw('./examples/hello-world.css')\nconst exampleHelloWorldData = raw('./examples/hello-world.json')\n\nconst exampleRealEstateHtml = raw('./examples/real-estate.hbs')\nconst exampleRealEstateCss = raw('./examples/real-estate.css')\nconst exampleRealEstateData = raw('./examples/real-estate.json')\n\nhandlebars.registerHelper('json', function(obj) {\n  return new handlebars.SafeString(JSON.stringify(obj))\n})\n\nconst liquid = new Liquid({ cache: true })\n\nconst engines = [\n  { value: 'html', label: 'HTML' },\n  { value: 'handlebars', label: 'Handlebars' },\n  { value: 'liquid', label: 'Liquid' }\n]\n\nconst examples = [\n  {\n    value: 'hello-world',\n    label: 'Hello World',\n    engine: 'handlebars',\n    html: exampleHelloWorldHtml,\n    css: exampleHelloWorldCss,\n    data: exampleHelloWorldData\n  },\n  {\n    value: 'real-estate',\n    label: 'Real Estate Gallery',\n    engine: 'handlebars',\n    html: exampleRealEstateHtml,\n    css: exampleRealEstateCss,\n    data: exampleRealEstateData\n  }\n]\n\nfunction compile({ html, data, engine }) {\n  switch (engine) {\n    case 'handlebars':\n      return handlebars.compile(html)(data)\n    case 'liquid':\n      return liquid.parseAndRenderSync(html, data)\n    default:\n      return html\n  }\n}\n\nfunction render({ html, css, data, engine, compile: shouldCompile = false }) {\n  const title = (data.settings && data.settings.title) || 'Template'\n  const favicon = data.settings && data.settings.favicon\n  const description =\n    (data.settings && data.settings.description) || `${engine} template`\n  const body = shouldCompile ? compile({ html, data, engine }) : html\n\n  return `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n    ${favicon ? `<link rel=\"icon\" href=\"${favicon}\" />` : ''}\n    ${description ? `<meta name=\"description\" content=\"${description}\" />` : ''}\n\n    <title>${title}</title>\n\n    <style type='text/css'>\n      * {\n        box-sizing: border-box;\n      }\n\n      body, html {\n        height: 100%;\n        padding: 0;\n        margin: 0;\n      }\n    </style>\n\n    <style type='text/css'>\n      ${css}\n    </style>\n  </head>\n\n  <body>\n    ${body}\n  </body>\n</html>\n`\n}\n\nconst Editor = ({ label, mode, ...props }) => (\n  <div className='Editor'>\n    <div className='Editor-title'>{label}</div>\n\n    <AceEditor\n      mode={mode}\n      theme='monokai'\n      name={`${mode.toUpperCase()}Editor`}\n      height='100%'\n      width='100%'\n      wrapEnabled\n      setOptions={{\n        tabSize: 2,\n        useSoftTabs: true\n      }}\n      {...props}\n    />\n  </div>\n)\n\nconst Button = ({ children, onClick }) => {\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <button\n      className='Button'\n      style={{ opacity: loading ? 0.8 : 1 }}\n      disabled={loading}\n      onClick={async () => {\n        setLoading(true)\n        await Promise.resolve(onClick())\n        setLoading(false)\n      }}\n    >\n      <span style={{ opacity: loading ? 0 : 1 }}>{children}</span>\n      <span className='Button-spinner'>\n        {loading && <ClipLoader size={16} color='white' />}\n      </span>\n    </button>\n  )\n}\n\nconst Preview = ({ html, css, data, engine }) => {\n  const [debouncedHtml] = useDebounce(html, 500)\n  const [debouncedData] = useDebounce(data, 500)\n  const [debouncedEngine] = useDebounce(engine, 500)\n\n  const [compiledHtml, setCompiledHtml] = useState(() => {\n    try {\n      return compile({ html, data, engine })\n    } catch (err) {\n      console.warn('Error compiling template; using raw HTML', err)\n\n      return html\n    }\n  })\n\n  useEffect(() => {\n    try {\n      const compiled = compile({\n        html: debouncedHtml,\n        data: debouncedData,\n        engine: debouncedEngine\n      })\n\n      setCompiledHtml(compiled)\n    } catch (err) {\n      console.warn('Error compiling template; using raw HTML', err)\n      setCompiledHtml(debouncedHtml)\n    }\n  }, [debouncedHtml, debouncedData, debouncedEngine])\n\n  return (\n    <div className='Preview'>\n      <div className='Preview-item'>\n        <div className='Preview-title'>Preview</div>\n\n        <Frame\n          className='Preview-frame'\n          head={\n            <>\n              <style type='text/css'>\n                {`\n* {\nbox-sizing: border-box;\n}\nbody, html, .frame-root, .frame-content, .frame-content > div {\n  height: 100%;\n  padding: 0;\n  margin: 0;\n}\n`}\n              </style>\n\n              <style type='text/css'>{css}</style>\n            </>\n          }\n        >\n          <InnerHTML html={compiledHtml} />\n        </Frame>\n      </div>\n    </div>\n  )\n}\n\nconst debouncedWriteStorage = debounce(\n  async ({ html, css, data, engine }) => {\n    writeStorage('html', html)\n    writeStorage('css', css)\n    writeStorage('data', data)\n    writeStorage('engine', engine)\n  },\n  1000,\n  { maxWait: 5000 }\n)\n\nconst App = () => {\n  const [storedHtml] = useLocalStorage('html')\n  const [storedCss] = useLocalStorage('css')\n  const [storedData] = useLocalStorage('data')\n  const [storedEngine] = useLocalStorage('engine')\n\n  const [html, setHtml] = useState(storedHtml || exampleHelloWorldHtml)\n  const [css, setCss] = useState(storedCss || exampleHelloWorldCss)\n  const [data, setData] = useState(storedData || exampleHelloWorldData)\n  const [dataJson, setDataJson] = useState(JSON.stringify(data, null, 2))\n  const [engine, setEngine] = useState(storedEngine || 'handlebars')\n\n  const copyTemplate = useCallback(async () => {\n    return copy(render({ html, css, data, engine, compile: false })).then(\n      () => {\n        toast.info(`Copied ${engine} template file to clipboard`)\n      }\n    )\n  }, [html, css, data, engine])\n\n  const copyOutput = useCallback(async () => {\n    return copy(render({ html, css, data, engine, compile: true })).then(() => {\n      toast.info('️Copied output HTML file to clipboard')\n    })\n  }, [html, css, data, engine])\n\n  useEffect(() => {\n    debouncedWriteStorage({ html, css, data, engine })\n  }, [html, css, data, engine])\n\n  const currentEngine = engines.find((e) => e.value === engine)\n  const currentExamples = examples.filter(\n    (example) => example.engine === engine\n  )\n\n  return (\n    <div className='App'>\n      <header className='Header'>\n        <div className='Header-logo'>\n          <a\n            href='https://github.com/saasify-sh/template-editor'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <img src={logo} alt='Logo' />\n          </a>\n\n          <div className='Header-logoProduct'>Template Editor</div>\n        </div>\n\n        <div className='Header-actions'>\n          <div className='Header-action'>\n            <Select\n              className='Header-engines'\n              name='Template Engine'\n              value={currentEngine}\n              onChange={(val) => setEngine(val.value)}\n              options={engines}\n              styles={{ container: (base) => ({ ...base, zIndex: 9999 }) }}\n            />\n          </div>\n\n          <div className='Header-action'>\n            <Select\n              className='Header-examples'\n              name='Example'\n              placeholder='Select Example'\n              value={null}\n              onChange={(val) => {\n                setHtml(val.html)\n                setCss(val.css)\n                setData(JSON.parse(val.data))\n                setDataJson(val.data)\n              }}\n              styles={{ container: (base) => ({ ...base, zIndex: 9999 }) }}\n              options={currentExamples}\n              disabled={!currentExamples.length}\n            />\n          </div>\n\n          <div className='Header-action'>\n            <Button onClick={copyTemplate}>Copy Template</Button>\n          </div>\n\n          <div className='Header-action'>\n            <Button onClick={copyOutput}>Copy Output</Button>\n          </div>\n\n          <div className='Header-action'>\n            <a\n              href='https://github.com/saasify-sh/template-editor'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <img src={github} alt='GitHub' />\n            </a>\n          </div>\n        </div>\n      </header>\n\n      <ToastContainer\n        position='bottom-right'\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        pauseOnVisibilityChange\n        draggable\n        pauseOnHover\n      />\n\n      <main className='Main'>\n        <section style={{ height: '100%', position: 'relative', flexGrow: 1 }}>\n          <SplitPane defaultSize='66.7%' split='vertical'>\n            <SplitPane defaultSize='50%' split='vertical' primary='second'>\n              <Editor\n                label={currentEngine.label}\n                mode={engine}\n                onChange={setHtml}\n                value={html}\n              />\n\n              <Editor label='CSS' mode='css' onChange={setCss} value={css} />\n            </SplitPane>\n\n            <Editor\n              label='Data'\n              mode='json'\n              onChange={(val) => {\n                try {\n                  setData(JSON.parse(val))\n                  setDataJson(val)\n                } catch {\n                  console.warn('Error parsing JSON')\n                }\n              }}\n              value={dataJson}\n            />\n          </SplitPane>\n        </section>\n\n        <Preview html={html} css={css} data={data} engine={engine} />\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'normalize.css'\nimport './index.css'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/logo.e148643a.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.d8530c85.svg\";"],"sourceRoot":""}